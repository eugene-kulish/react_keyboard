{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleDocumentKeyPress","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,0BAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,0BAV/C,oBAiBE,WACE,OACE,mCACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACuB,KAAnBF,KAAKP,MAAMC,IAAZ,mCACgCM,KAAKP,MAAMC,IAD3C,KAEI,oCAxBjB,GAAyBS,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.5246a6cf.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyPress);\n  }\n\n  handleDocumentKeyPress = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <p className=\"App__message\">\n            {(this.state.key !== '')\n              ? (`The last pressed key is [${this.state.key}]`)\n              : ('Nothing was pressed yet')}\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}